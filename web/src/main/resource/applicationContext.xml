<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">



    <!-- 启用组件扫描 -->
    <context:component-scan
            base-package="com.prophet" />

    <!-- 启用注解自动装 配 -->
    <context:annotation-config />

    <!-- spring aop 配置 -->
    <aop:aspectj-autoproxy />

    <!-- jdbc配置 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- dbcp数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 连接池最大使用连接数 -->
        <property name="maxActive" value="${pool.maxActive}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${pool.initialSize}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${pool.maxWait}"/>
        <!-- 连接池最大空闲 -->
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${pool.maxPoolPreparedStatementPerConnectionSize}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${pool.minIdle}"/>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned" value="${pool.removeAbandoned}"/>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout" value="${pool.removeAbandonedTimeout}"/>
        <!-- 连接属性 -->
        <property name="connectionProperties" value="${pool.connectionProperties}"/>
    </bean>

    <!-- mybatis的配置文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:com/prophet/EducationAdministrativeSystem/dao/mapper/*Mapper.xml"/>
    </bean>


    <!-- spring与mybatis整合配置，扫描所有dao 和所有mapper文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.prophet.EducationAdminSystem.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>




    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 写操作 -->
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>

            <!-- 读操作 -->
            <tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>

            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>



    <aop:config>
        <aop:pointcut id="pc" expression="execution(public * com.prophet.EducationAdministrativeSystem.service.*.*(..))"/>
        <!--把事务控制在Service层-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
    </aop:config>



</beans>